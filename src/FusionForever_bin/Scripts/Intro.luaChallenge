math.randomseed(os.time())
for i = 0, 50 do
	math.random() --First random number is always the same on some platforms
end

--A list of fun little functions that spawn something interesting
introlist = {
function()
	print("Intro 1")
	challenge:SpawnShip("TheMine", 0, Vector:new(500, 0), 0, "Ram.luaAI", 1)
	challenge:SpawnShip("KineticB", 1, Vector:new(0, 0), 0, "SimpleAI.luaAI", 1)
end,

function()
	print("Intro 2")
	for i = 0, 20 do
		challenge:SpawnShip("TheMine", 0, Vector:from_angle((360/20) * i) * 500, 0, "Ram.luaAI", 1)
	end
	challenge:SpawnShip("KineticB", 1, Vector:new(0, 0), 0, "SimpleAI.luaAI", 1)
end,

function()
	for i = 0, 10 do
		challenge:SpawnShip("KineticA", 1, Vector:new(200, -150 + 30 * i), 0, "FleeingAI.luaAI", 1)
	end
	
	challenge:SpawnShip("TheMine", 0, Vector:new(-500, 100), 0, "Ram.luaAI", 250)
	challenge:SpawnShip("TheMine", 0, Vector:new(-500, 100), 0, "Ram.luaAI", 250)
end,

function()
	challenge:SpawnShip("Cilia", 1, Vector:new(0, 0), 0, "CiliaAI.luaAI", 1)
	for i = 0, 100 do
		challenge:SpawnShip("TheMine", 0, Vector:random_ring(800, 800), 0, "Ram_NoCam.luaAI", 0.2)
		challenge:WaitFor(0.01)
	end
end,

function()
	challenge:SpawnShip("Grawp", 1, Vector:new(300, 0), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(0, 300), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 3, Vector:new(-300, 0), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 4, Vector:new(0, -300), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 5, Vector:new(300, 300), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 6, Vector:new(-300, -300), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 7, Vector:new(300, -300), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 0, Vector:new(-300, 300), 0, "GrawpAI.luaAI", 1)
end,

function()
	mine_id = challenge:SpawnShip("TheMine", 2, Vector:new(0, 0), 0, "Ram.luaAI", 25)
	coroutine.yield();
	grawp_id = challenge:SpawnShip("Grawp", 0, Vector:new(300, 0), 0, "GrawpAI.luaAI", 1)
	coroutine.yield();
	challenge:SetShipTarget(grawp_id, mine_id)
	grawp_id = challenge:SpawnShip("Grawp", 0, Vector:new(-300, 0), 0, "GrawpAI.luaAI", 1)
	coroutine.yield();
	challenge:SetShipTarget(grawp_id, mine_id)
	grawp_id = challenge:SpawnShip("Grawp", 0, Vector:new(0, 200), 0, "GrawpAI.luaAI", 1)
	coroutine.yield();
	challenge:SetShipTarget(grawp_id, mine_id)
	coroutine.yield();
	
	for i = -10, 10 do
		last_spawn = challenge:SpawnShip("KineticA", 1, Vector:from_angle(360 * i / 20) * 500, 0, "FleeingAI.luaAI", 1)
	end
	challenge:SetShipTarget(mine_id, last_spawn)
end,

function()
	challenge:SpawnShip("Grawp", 0, Vector:new(400, 0), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 0, Vector:new(-400, 0), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 0, Vector:new(0, 400), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 0, Vector:new(0, -400), 0, "GrawpAI.luaAI", 1)
	
	challenge:SpawnShip("Cilia", 1, Vector:new(0, 0), 0, "CiliaAI.luaAI", 3)
end,

function()
	challenge:SpawnShip("Broadside", 2, Vector:new(500, 0), -90, "SimpleAI.luaAI", 1);
	challenge:SpawnShip("Broadside", 1, Vector:new(-500, 0), 90, "SimpleAI.luaAI", 1);
end,

function()
	challenge:SpawnShip("ShieldCover", 0, Vector:new(0, 0), 0, "SpaceStationAI.luaAI", 1);
	
	challenge:SpawnShip("NewTech", 1, Vector:new(400,  0), 0, "TurretAI.luaAI", 1);
	challenge:SpawnShip("MrFlak", 2, Vector:new(-400, 0), 0, "TurretAI.luaAI", 1);
	challenge:SpawnShip("Turret", 3, Vector:new(0,  400), 0, "TurretAI.luaAI", 1);
	challenge:SpawnShip("LaserTurret", 4, Vector:new(0, -400), 0, "TurretAI.luaAI", 1);
end,

function()
	
	challenge:SpawnShip("Turret", 0, Vector:new( 100, 100), 0, "BurstTurretAI.luaAI", 0.01);
	challenge:SpawnShip("Turret", 0, Vector:new( -100, 100), 0, "BurstTurretAI.luaAI", 0.01);
	challenge:SpawnShip("Turret", 0, Vector:new( -100, -100), 0, "BurstTurretAI.luaAI", 0.01);
	challenge:SpawnShip("Turret", 0, Vector:new( 100, -100), 0, "BurstTurretAI.luaAI", 0.01);
	
	
	for i = 0, 200 do
		challenge:SpawnShip("TheMine", 1, Vector:random_ring(1000, 1500), 0, "Ram_NoCam.luaAI", 0.01)
		challenge:WaitFor(0.04)
	end
end,

function()

	--Build a ship and spawn it

	core = builder:createNew("SquareCore")
	core:overrideHealth(2000)

	armour = builder:createNew("WidePlate")
	armour.position.y = 10
	core:attachChild(armour)
	
	generator = builder:createNew("SuperGeneratorCube")
	core:attachChild(generator)

	for i = 0, 36 do
		gun = builder:createNew("Blaster")
		gun.angle = i * 10
		gun.position.y = 5
		armour:attachChild(gun)
	end

	local ship_id = builder:spawnDesign(core, Vector:new(50, 50), 0, 0, 1)
	challenge:DisplayMessage("Spawned a ship designed in lua", 2);
	print("OK, created core")
	challenge:WaitFor(1)


	--obtain the spawned ship and add another gun!
	challenge:DisplayMessage("Adding guns to an existing ship", 2);

	core = builder:getDesign(ship_id)
--	core:Dump()


	for i = 0, 18 do
		core = builder:getDesign(ship_id)
		
		--print("Got design")
		gun = builder:createNew("Blaster")
		gun.angle = i * 10
		gun.position = Vector:new(math.sin(math.rad(i * 10)) * 10, math.cos(math.rad(i * 10)) * 10 - 10)
		core:attachChild(gun)
		gun = builder:createNew("Blaster")
		gun.angle = -i * 10
		gun.position = Vector:new(math.sin(math.rad(-i * 10)) * 10, math.cos(math.rad(-i * 10)) * 10 - 10)
		core:attachChild(gun)		
		--print("Updating")
		builder:updateShip(core)
		challenge:WaitFor(0.1)
	end
	challenge:WaitFor(2)
	print("Adding lots of guns")
	challenge:WaitFor(0.5)
	core = builder:getDesign(ship_id)
	active1 = core
	active2 = core
	for i = 0, 20 do
		local gun_l = builder:createNew("PlasmaArtillery")
		local gun_r = builder:createNew("PlasmaArtillery")
		gun_l.position = Vector:new(20, 0)
		gun_r.position = Vector:new(-20, 0)
		active1:attachChild(gun_l)
		active2:attachChild(gun_r)
		active1 = gun_l
		active2 = gun_r
	end
	builder:updateShip(core)
	print("Guns done")
	challenge:WaitFor(2)
	
	
	core = builder:getDesign(ship_id)
	challenge:WaitFor(1)
	core.subsections[1]:detach()
	print("Destroying a bit")
	builder:updateShip(core)
	
	core = builder:getDesign(ship_id)
	challenge:WaitFor(4)
	core.subsections[2].section_type = "HeavyChainGun"
	print("Changing to a heavy chaingun")
	builder:updateShip(core)


	challenge:WaitFor(2)
end,

function()
	player_id = challenge:SpawnShip("DevilHead", 0, Vector:new( 100, 100), 0, "SimpleAI.luaAI", 0.01);
	challenge:SpawnShip("Turret", 0, Vector:new( -100, -100), 0, "BurstTurretAI.luaAI", 0.01);
	challenge:WaitFor(1)
	challenge:Inspect(player_id)
	
	challenge:SpawnShip("TheMine", 1, Vector:random_ring(1000, 1500), 0, "Ram_NoCam.luaAI", 0.01)
	challenge:WaitFor(0.2)
	challenge:SpawnShip("TheMine", 1, Vector:random_ring(1000, 1500), 0, "Ram_NoCam.luaAI", 0.01)
	challenge:WaitFor(0.2)
	challenge:WaitFor(5)
	
	mine_id = challenge:SpawnShip("TheMine", 1, Vector:random_ring(1000, 1500), 0, "Ram_NoCam.luaAI", 0.01)
	challenge:Inspect(mine_id)
	
	for i = 0, 30 do
		challenge:SpawnShip("TheMine", 1, Vector:random_ring(1000, 1500), 0, "Ram_NoCam.luaAI", 0.01)
		challenge:WaitFor(0.2)
	end
end
}

--Pick a random intro
local intro = math.random(1, #introlist)
local intro = #introlist
print("Intro " .. intro)
introlist[intro]()





challenge:WaitFor(3)
challenge:Draw()