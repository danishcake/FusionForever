playerSpawn = coroutine.wrap(function()
	player_id = challenge:SpawnShip("Protoship", 0, Vector:new(0,0), 0, "KeyboardAI", 1)
	challenge:WaitForForceCountLessThan(0, 1)
	challenge:WaitFor(1)
	challenge:Defeat()
end)

spawnMines = function(count, death_fn, force)
	local force_ = 1
	if force ~= nil then
		force_ = force
	end
	
	for i = 1, count do
		local ship_data = challenge:GetShipData(player_id)
		local mine_id = challenge:SpawnShip("TheMine", force_, ship_data.position + Vector:random_ring(700, 1200), 0, "Ram.luaAI", 1)
		if death_fn ~= nil then
			challenge:SetDeathFunction(mine_id, death_fn)
		end
	end
end

spawnTimedMines = function(count, gap, death_fn)
	for i = 1, count do
		local ship_data = challenge:GetShipData(player_id)
		local mine_id = challenge:SpawnShip("TheMine", 1, ship_data.position + Vector:random_ring(700, 1200), 0, "Ram.luaAI", 1)
		if death_fn ~= nil then
			challenge:SetDeathFunction(mine_id, death_fn)
		end
		challenge:WaitFor(gap)
	end
end

mineSpawnCount = 0

mineSpawnDie = function()
	mineSpawnCount = mineSpawnCount - 1
end

WaitForMinesDead = function()
	while mineSpawnCount > 0 do
		coroutine.yield()
	end
end

mineSpawn = coroutine.wrap(function()
	challenge:WaitFor(3)
	
	--Phase 1
	for i = 1, 4 do
		mineSpawnCount = i
		spawnMines(mineSpawnCount, mineSpawnDie)
		WaitForMinesDead()
		challenge:WaitFor(2)
	end

	challenge:DisplayMessage("Phase 2", 2);
	--Phase 2
	for i = 1, 4 do
		mineSpawnCount = i * 4
		spawnTimedMines(mineSpawnCount, 1 - 0.1 * i, mineSpawnDie)
		WaitForMinesDead()
		challenge:WaitFor(2)
	end

	challenge:WaitFor(1)
	challenge:Victory()
end)

challenge:SetFriendly(1,2)

challenge:DisplayMessage("Incoming! 1", 2);
challenge:DisplayMessage("by Edward Woolhouse", 2);
challenge:WaitFor(1.5)
challenge:DisplayMessage("The enemy is spawning mines!", 2);
challenge:WaitFor(0.5)
challenge:DisplayMessage("Shoot them before they hit you!", 2);
challenge:WaitFor(0.5)
challenge:DisplayMessage("Get ready...", 2);
challenge:WaitFor(1.0)

while true do
	playerSpawn()
	mineSpawn()
	coroutine.yield()
end