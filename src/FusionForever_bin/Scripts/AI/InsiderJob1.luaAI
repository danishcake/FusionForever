if ship.target.valid == false or math.random() < 0.2 then
	ship:PickRandomTarget()
end

ship:WaitFor(0.1)
local starting_position = Vector:new(ship.position.x, ship.position.y)
local starting_angle = ship.angle

local td = 0
local firing = false
local dp = Vector:new(0, 0)
local fire_end_time = ship.time + 2



while true do
	local dpos = ship.position - starting_position
	if dpos:lengthSqr() > 10 then
		dp.x = -dpos.x / 100
		dp.y = -dpos.y / 100
	else
		dp.x = 0
		dp.y = 0
	end
	--if ship.angle < starting_angle - 10 then
	--	td = (starting_angle - ship.angle) / 50
	--	if td > 1 then td = 1 end
	--end
	--if ship.angle > starting_angle + 10 then
	--	td = (starting_angle - ship.angle) / 50
	--	if td < -1 then td = -1 end
	--end
	td = -0.5
	
	if ship.time < fire_end_time then
		firing = true
	elseif ship.time < fire_end_time + 6 then
		firing = false
	else
		fire_end_time = ship.time + 2
	end
	
	ship:SetAll(dp.x, dp.y, td, firing)
	
	if ship.target.valid == false then
		ship:PickRandomTarget()
	end
	
	coroutine.yield()
end



