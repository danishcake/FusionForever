playerLives = coroutine.wrap(function()
	challenge:DisplayMessage("3 Lives Remaining", 1);
	
	player_id = challenge:SpawnShip("KineticA", 0, Vector:new(0, 0), 0, "KeyboardAI", 1)
	challenge:WaitForDeath(player_id)
	challenge:WaitFor(1)
	
	challenge:DisplayMessage("2 Lives Remaining", 1);
	player_id = challenge:SpawnShip("KineticA", 0, Vector:new(0, 0), 0, "KeyboardAI", 1)
	challenge:WaitForDeath(player_id)
	challenge:WaitFor(1)
	
	challenge:DisplayMessage("1 Life Remaining", 1);
	player_id = challenge:SpawnShip("KineticA", 0, Vector:new(0, 0), 0, "KeyboardAI", 1)
	challenge:WaitForDeath(player_id)
	challenge:WaitFor(1)
	
	challenge:Defeat()
end)

enemySpawn = coroutine.wrap(function()
	stage = 1
	challenge:WaitFor(2)
	challenge:DisplayMessage("Round 1", 1);
	challenge:SpawnShip("Grawp", 2, Vector:new(0, -500), 0, "GrawpAI.luaAI", 1)
	challenge:WaitForAllEnemiesDead(0)
	challenge:WaitFor(1)
	stage = 2
	challenge:DisplayMessage("Round 2", 1);
	challenge:SpawnShip("Grawp", 2, Vector:new(0, 1000), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(0, -1000), 0, "GrawpAI.luaAI", 1)
	challenge:WaitForAllEnemiesDead(0)
	challenge:WaitFor(1)
	stage = 3
	challenge:DisplayMessage("Round 3", 1);
	challenge:SpawnShip("Grawp", 2, Vector:new(1000, 0), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(-1000, 0), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(0, -1000), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(0, 1000), 0, "GrawpAI.luaAI", 1)
	challenge:WaitForAllEnemiesDead(0)
	challenge:WaitFor(1)
	stage = 4
	challenge:DisplayMessage("Round 4", 1);
	challenge:SpawnShip("Grawp", 2, Vector:new(1000, 0), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(-1000, 0), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(0, -1000), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(0, 1000), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(1000, 1000), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(-1000, -1000), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(1000, -1000), 0, "GrawpAI.luaAI", 1)
	challenge:SpawnShip("Grawp", 2, Vector:new(-1000, 1000), 0, "GrawpAI.luaAI", 1)
	

	challenge:WaitForAllEnemiesDead(0)
	challenge:Victory()
end)

allySpawn = coroutine.create(function()
	local spawn_count = 0
	
	while spawn_count < 40 do
		if stage == 1 then
			player_data = challenge:GetShipData(player_id)
			challenge:SpawnShip("GunshipA", 0, player_data.position + Vector:new(math.random(-200, 200), math.random(-200, 200)), 0, "SimpleAI.luaAI", 0.2)
			spawn_count = spawn_count + 1
		end
		if stage == 2 then
			player_data = challenge:GetShipData(player_id)
			challenge:SpawnShip("KineticC", 0, player_data.position + Vector:new(math.random(-200, 200), math.random(-200, 200)), 0, "SimpleAI.luaAI", 0.2)
			spawn_count = spawn_count + 1
		end
		if stage == 3 then
			player_data = challenge:GetShipData(player_id)
			challenge:SpawnShip("KineticA", 0, player_data.position + Vector:new(math.random(-200, 200), math.random(-200, 200)), 0, "SimpleAI.luaAI", 0.3)
			spawn_count = spawn_count + 1
		end
		if stage == 4 then
			player_data = challenge:GetShipData(player_id)
			challenge:SpawnShip("KineticB", 0, player_data.position + Vector:new(math.random(-200, 200), math.random(-200, 200)), 0, "SimpleAI.luaAI", 0.4)
			spawn_count = spawn_count + 1
		end
		challenge:WaitForForceCountLessThan(0, 3)
	end
end)

challenge:DisplayMessage("Grawp!", 2);
challenge:DisplayMessage("by Edward Woolhouse", 2);
challenge:WaitFor(1.5)
challenge:DisplayMessage("Fight four waves of grawps", 2);
challenge:WaitFor(0.5)
challenge:DisplayMessage("Stay away from their tentacles!", 2);
challenge:WaitFor(0.5)
challenge:DisplayMessage("You have 40 allies - don't let them all die!", 2);
challenge:WaitFor(0.5)
challenge:DisplayMessage("Get ready...", 2);
challenge:WaitFor(1.0)

while true do
	playerLives()
	enemySpawn()
	
	if coroutine.status(allySpawn) ~= "dead" then
		local status, error_msg = coroutine.resume(allySpawn)
		if status == false then
			error(error_msg)
		end
	end
	coroutine.yield()
end


