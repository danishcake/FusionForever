

if ship.target.valid == false or math.random() < 0.2 then
	ship:PickRandomTarget()
end

if(camera_position == nil) then
	camera_position = Vector:new(ship.position.x, ship.position.y);
end


local update_camera = function()
	local x
	local y
	if ship.target.valid then
		x = (ship.position.x + ship.target.position.x) / 2
		y = (ship.position.y + ship.target.position.y) / 2
	else
		x = ship.position.x
		y = ship.position.y
	end
	camera_position.x = camera_position.x + (x - camera_position.x) * 0.1
	camera_position.y = camera_position.y + (y - camera_position.y) * 0.1
	if camera_position.x - ship.position.x > 500 then 
		camera_position.x = ship.position.x + 500 end
	if camera_position.x - ship.position.x < -500 then 
		camera_position.x = ship.position.x - 500 end
	if camera_position.y - ship.position.y > 500 then 
		camera_position.y = ship.position.y + 500 end
	if camera_position.y - ship.position.y < -500 then 
		camera_position.y = ship.position.y - 500 end
	ship:SetCameraPosition(camera_position.x, camera_position.y)
end

--Attack
ship:AttackForAnd(1, 100, 500, update_camera)
ship:AttackForAnd(1, 200, 300, update_camera)
ship:AttackForAnd(1, 1000, 1200, update_camera)




