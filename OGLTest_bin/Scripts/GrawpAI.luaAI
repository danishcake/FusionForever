if ship.target.valid == false then
	ship:PickClosestTarget()
end
if math.random() < 0.75 then
	ship:PickRandomTarget()
end


local end_time = ship.time + 10
while ship.time < end_time do

    if ship.target.valid == true then
        local range = (ship.target.position - ship.position):length()
        local dp = (ship.target.position - ship.position):normalise()
        local firing = range < 1000
        local turn = 0
        if ((ship.time /5) % 4) > 1 and ((ship.time /5) % 4) < 2 then
            turn = 1
        elseif ((ship.time / 5) % 4) > 3 then
            turn = -1
        end


        if range < 200 then
            --Back off
            ship:SetAll(-dp.x, -dp.y, turn, firing)
        elseif range > 400 then
            --Advance
            ship:SetAll(dp.x, dp.y, turn, firing)
        else
            --Strafe
            ship:SetAll(dp.y, -dp.x, turn, firing)
        end
    else
        ship:PickClosestTarget()
    end
    coroutine.yield()
end


